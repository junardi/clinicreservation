import React from 'react';
import { useState, useEffect } from 'react';
import Head from 'next/head'


import { useRouter } from 'next/router';
import { signIn } from "next-auth/react";


import { Container, Row, Col, Form, Button } from 'react-bootstrap';

const defaultFormFields = {
  username: '',
  password: ''
};

export default function Login() {


  const router = useRouter();

  const [isLoginError, setIsLoginError] = useState(false);

  const [formFields, setFormFields] = useState(defaultFormFields);
  const { username, password } = formFields;

  const handleFormInputsChange = (event) => {
    const { name, value } = event.target;
    setFormFields({...formFields, [name]: value});
  };

  const doLogin = async(event) => {
    event.preventDefault();

    const result = await signIn('credentials', {
      redirect: false,
      username: username,
      password: password,
    });

    if(result.error) {
      setIsLoginError(true);
    } else {
      //router.push("/admin");
    }


  };  

  return (
    <>
      <Head>
        <title>Child mapping information system</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>

        <Container>
          <Row>
            
            <Col>
              
              <div className="login-container-wrapper">
             
                <div className="login-container">
                  <h1>Child Mapping Information System <br /> (CMIS)</h1>
                  <Form>
                    
                    <Form.Group className="mb-3 inline-group" controlId="formBasicUsername">
                      <Form.Label className='label'>Username:</Form.Label>
                      <Form.Control type="text" name="username" onChange={handleFormInputsChange} />
                    </Form.Group>

                    <Form.Group className="mb-3 inline-group" controlId="formBasicPassword">
                      <Form.Label className='label'>Password:</Form.Label>
                      <Form.Control type="password" name="password" onChange={handleFormInputsChange} />
                    </Form.Group>

                    { isLoginError &&
                    <p className='login-error'>Invalid username or password.</p>
                    }
                  
                    <div className="submit-button-container">
                      <Button size='sm' className='btn-common' type="submit" onClick={doLogin}>
                        LOG IN
                      </Button>
                    </div>
                   
                    <div className="sign-up-link-container mt-4">
                      <p className='mb-1'>Create New Account</p>
                      <Button type="button" size="sm" className='btn-common' onClick={() => router.push('/register')}>                                               
                        SIGN UP
                      </Button>
                    </div>

                  </Form>
                </div>

              </div>

            </Col>

          </Row>
        </Container>
      
      </main>
    </>
  )

}
